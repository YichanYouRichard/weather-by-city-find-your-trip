// variable for United States cities / states in Array
var citiesOfUnitedStates = {
  "Alabama" : [
    "Alexander City",
    "Andalusia",
    "Anniston",
    "Athens",
    "Atmore",
    "Auburn",
    "Bessemer",
    "Birmingham",
    "Chickasaw",
    "Clanton",
    "Cullman",
    "Decatur",
    "Demopolis",
    "Dothan",
    "Enterprise",
    "Eufaula",
    "Florence",
    "Fort Payne",
    "Gadsden",
    "Greenville",
    "Guntersville",
    "Huntsville",
    "Jasper",
    "Marion",
    "Mobile",
    "Montgomery",
    "Opelika",
    "Ozark",
    "Phenix City",
    "Prichard",
    "Scottsboro",
    "Selma",
    "Sheffield",
    "Sylacauga",
    "Talladega",
    "Troy",
    "Tuscaloosa",
    "Tuscumbia",
    "Tuskegee"
  ],
  "Alaska" : [
    "Anchorage",
    "Cordova",
    "Fairbanks",
    "Haines",
    "Homer",
    "Juneau",
    "Ketchikan",
    "Kodiak",
    "Kotzebue",
    "Nome",
    "Palmer",
    "Seward",
    "Sitka",
    "Skagway",
    "Valdez"
  ],
  "Arizona" : [
    "Ajo",
    "Avondale",
    "Bisbee",
    "Casa Grande",
    "Chandler",
    "Clifton",
    "Douglas",
    "Flagstaff",
    "Florence",
    "Gila Bend",
    "Glendale",
    "Globe",
    "Kingman",
    "Lake Havasu City",
    "Mesa",
    "Nogales",
    "Oraibi",
    "Phoenix",
    "Prescott",
    "Scottsdale",
    "Sierra Vista",
    "Tempe",
    "Tombstone",
    "Tucson",
    "Walpi",
    "Window Rock",
    "Winslow",
    "Yuma"
  ],
  "Arkansas" : [
    "Arkadelphia",
    "Arkansas Post",
    "Batesville",
    "Benton",
    "Blytheville",
    "Camden",
    "Conway",
    "Crossett",
    "El Dorado",
    "Fayetteville",
    "Forrest City",
    "Fort Smith",
    "Harrison",
    "Helena",
    "Hope",
    "Hot Springs",
    "Jacksonville",
    "Jonesboro",
    "Little Rock",
    "Magnolia",
    "Morrilton",
    "Newport",
    "North Little Rock",
    "Osceola",
    "Pine Bluff",
    "Rogers",
    "Searcy",
    "Stuttgart",
    "Van Buren",
    "West Memphis"
  ],
  "California": [
    "Alameda",
    "Alhambra",
    "Anaheim",
    "Antioch",
    "Arcadia",
    "Bakersfield",
    "Barstow",
    "Belmont",
    "Berkeley",
    "Beverly Hills",
    "Brea",
    "Buena Park",
    "Burbank",
    "Calexico",
    "Calistoga",
    "Carlsbad",
    "Carmel",
    "Chico",
    "Chula Vista",
    "Claremont",
    "Compton",
    "Concord",
    "Coronado",
    "Costa Mesa",
    "Culver City",
    "Daly City",
    "Davis",
    "Downey",
    "El Centro",
    "El Cerrito",
    "El Monte",
    "Escondido",
    "Eureka",
    "Fairfield",
    "Fontana",
    "Fremont",
    "Fresno",
    "Fullerton",
    "Garden Grove",
    "Glendale",
    "Hayward",
    "Hollywood",
    "Huntington Beach",
    "Indio",
    "Inglewood",
    "Irvine",
    "La Habra",
    "Laguna Beach",
    "Lancaster",
    "Livermore",
    "Lodi",
    "Lompoc",
    "Long Beach",
    "Los Angeles",
    "Malibu",
    "Martinez",
    "Marysville",
    "Menlo Park",
    "Merced",
    "Modesto",
    "Monterey",
    "Mountain View",
    "Napa",
    "Needles",
    "Newport Beach",
    "Norwalk",
    "Novato",
    "Oakland",
    "Oceanside",
    "Ojai",
    "Ontario",
    "Orange",
    "Oroville",
    "Oxnard",
    "Pacific Grove",
    "Palm Springs",
    "Palmdale",
    "Palo Alto",
    "Pasadena",
    "Petaluma",
    "Pomona",
    "Port Hueneme",
    "Rancho Cucamonga",
    "Red Bluff",
    "Redding",
    "Redlands",
    "Redondo Beach",
    "Redwood City",
    "Richmond",
    "Riverside",
    "Roseville",
    "Sacramento",
    "Salinas",
    "San Bernardino",
    "San Clemente",
    "San Diego",
    "San Fernando",
    "San Francisco",
    "San Gabriel",
    "San Jose",
    "San Juan Capistrano",
    "San Leandro",
    "San Luis Obispo",
    "San Marino",
    "San Mateo",
    "San Pedro",
    "San Rafael",
    "San Simeon",
    "Santa Ana",
    "Santa Barbara",
    "Santa Clara",
    "Santa Clarita",
    "Santa Cruz",
    "Santa Monica",
    "Santa Rosa",
    "Sausalito",
    "Simi Valley",
    "Sonoma",
    "South San Francisco",
    "Stockton",
    "Sunnyvale",
    "Susanville",
    "Thousand Oaks",
    "Torrance",
    "Turlock",
    "Ukiah",
    "Vallejo",
    "Ventura",
    "Victorville",
    "Visalia",
    "Walnut Creek",
    "Watts",
    "West Covina",
    "Whittier",
    "Woodland",
    "Yorba Linda",
    "Yuba City"
  ],
  "Colorado" : [
    "Alamosa",
    "Aspen",
    "Aurora",
    "Boulder",
    "Breckenridge",
    "Brighton",
    "Canon City",
    "Central City",
    "Climax",
    "Colorado Springs",
    "Cortez",
    "Cripple Creek",
    "Denver",
    "Durango",
    "Englewood",
    "Estes Park",
    "Fort Collins",
    "Fort Morgan",
    "Georgetown",
    "Glenwood Springs",
    "Golden",
    "Grand Junction",
    "Greeley",
    "Gunnison",
    "La Junta",
    "Leadville",
    "Littleton",
    "Longmont",
    "Loveland",
    "Montrose",
    "Ouray",
    "Pagosa Springs",
    "Pueblo",
    "Silverton",
    "Steamboat Springs",
    "Sterling",
    "Telluride",
    "Trinidad",
    "Vail",
    "Walsenburg",
    "Westminster"
  ],
  "Connecticut" : [
    "Ansonia",
    "Berlin",
    "Bloomfield",
    "Branford",
    "Bridgeport",
    "Bristol",
    "Coventry",
    "Danbury",
    "Darien",
    "Derby",
    "East Hartford",
    "East Haven",
    "Enfield",
    "Fairfield",
    "Farmington",
    "Greenwich",
    "Groton",
    "Guilford",
    "Hamden",
    "Hartford",
    "Lebanon",
    "Litchfield",
    "Manchester",
    "Mansfield",
    "Meriden",
    "Middletown",
    "Milford",
    "Mystic",
    "Naugatuck",
    "New Britain",
    "New Haven",
    "New London",
    "North Haven",
    "Norwalk",
    "Norwich",
    "Old Saybrook",
    "Orange",
    "Seymour",
    "Shelton",
    "Simsbury",
    "Southington",
    "Stamford",
    "Stonington",
    "Stratford",
    "Torrington",
    "Wallingford",
    "Waterbury",
    "Waterford",
    "Watertown",
    "West Hartford",
    "West Haven",
    "Westport",
    "Wethersfield",
    "Willimantic",
    "Windham",
    "Windsor",
    "Windsor Locks",
    "Winsted"
  ], 
  "Delaware" : [
    "Dover",
    "Lewes",
    "Milford",
    "New Castle",
    "Newark",
    "Smyrna",
    "Wilmington"
  ],
  "Florida" : [
    "Apalachicola",
    "Bartow",
    "Belle Glade",
    "Boca Raton",
    "Bradenton",
    "Cape Coral",
    "Clearwater",
    "Cocoa Beach",
    "Cocoa-Rockledge",
    "Coral Gables",
    "Daytona Beach",
    "De Land",
    "Deerfield Beach",
    "Delray Beach",
    "Fernandina Beach",
    "Fort Lauderdale",
    "Fort Myers",
    "Fort Pierce",
    "Fort Walton Beach",
    "Gainesville",
    "Hallandale Beach",
    "Hialeah",
    "Hollywood",
    "Homestead",
    "Jacksonville",
    "Key West",
    "Lake City",
    "Lake Wales",
    "Lakeland",
    "Largo",
    "Melbourne",
    "Miami",
    "Miami Beach",
    "Naples",
    "New Smyrna Beach",
    "Ocala",
    "Orlando",
    "Ormond Beach",
    "Palatka",
    "Palm Bay",
    "Palm Beach",
    "Panama City",
    "Pensacola",
    "Pompano Beach",
    "Saint Augustine",
    "Saint Petersburg",
    "Sanford",
    "Sarasota",
    "Sebring",
    "Tallahassee",
    "Tampa",
    "Tarpon Springs",
    "Titusville",
    "Venice",
    "West Palm Beach",
    "White Springs",
    "Winter Haven",
    "Winter Park"
  ],
  "Georgia" : [
    "Albany",
    "Americus",
    "Andersonville",
    "Athens",
    "Atlanta",
    "Augusta",
    "Bainbridge",
    "Blairsville",
    "Brunswick",
    "Calhoun",
    "Carrollton",
    "Columbus",
    "Dahlonega",
    "Dalton",
    "Darien",
    "Decatur",
    "Douglas",
    "East Point",
    "Fitzgerald",
    "Fort Valley",
    "Gainesville",
    "La Grange",
    "Macon",
    "Marietta",
    "Milledgeville",
    "Plains",
    "Rome",
    "Savannah",
    "Toccoa",
    "Valdosta",
    "Warm Springs",
    "Warner Robins",
    "Washington",
    "Waycross"
  ],
  "Hawaii" : [
    "Hanalei",
    "Hilo",
    "Honaunau",
    "Honolulu",
    "Kahului",
    "Kaneohe",
    "Kapaa",
    "Kawaihae",
    "Lahaina",
    "Laie",
    "Wahiawa",
    "Wailuku",
    "Waimea"
  ], 
  "Idaho": [
    "Blackfoot",
    "Boise",
    "Bonners Ferry",
    "Caldwell",
    "Coeur d'Alene",
    "Idaho City",
    "Idaho Falls",
    "Kellogg",
    "Lewiston",
    "Moscow",
    "Nampa",
    "Pocatello",
    "Priest River",
    "Rexburg",
    "Sun Valley",
    "Twin Falls"
  ],
  "Illinois": [
    "Alton", 
    "Arlington Heights",
    "Arthur",
    "Aurora",
    "Belleville",
    "Belvidere",
    "Bloomington",
    "Brookfield",
    "Cahokia",
    "Cairo",
    "Calumet City",
    "Canton",
    "Carbondale",
    "Carlinville",
    "Carthage",
    "Centralia",
    "Champaign",
    "Charleston",
    "Chester",
    "Chicago",
    "Chicago Heights",
    "Cicero",
    "Collinsville",
    "Danville",
    "Decatur",
    "DeKalb",
    "Des Plaines",
    "Dixon",
    "East Moline",
    "East Saint Louis",
    "Effingham",
    "Elgin",
    "Elmhurst",
    "Evanston",
    "Freeport",
    "Galena",
    "Galesburg",
    "Glen Ellyn",
    "Glenview",
    "Granite City",
    "Harrisburg",
    "Herrin",
    "Highland Park",
    "Jacksonville",
    "Joliet",
    "Kankakee",
    "Kaskaskia",
    "Kewanee",
    "La Salle",
    "Lake Forest",
    "Libertyville",
    "Lincoln",
    "Lisle",
    "Lombard",
    "Macomb",
    "Mattoon",
    "Moline",
    "Monmouth",
    "Mount Vernon",
    "Mundelein",
    "Naperville",
    "Nauvoo",
    "Normal",
    "North Chicago",
    "Oak Park",
    "Oregon",
    "Ottawa",
    "Palatine",
    "Park Forest",
    "Park Ridge",
    "Pekin",
    "Peoria",
    "Petersburg",
    "Pontiac",
    "Quincy",
    "Rantoul",
    "River Forest",
    "Rock Island",
    "Rockford",
    "Salem",
    "Shawneetown",
    "Skokie",
    "South Holland",
    "Springfield",
    "Streator",
    "Summit",
    "Urbana",
    "Vandalia",
    "Virden",
    "Waukegan",
    "Wheaton",
    "Wilmette",
    "Winnetka",
    "Wood River",
    "Zion"
  ],
  "Indiana" : [
    "Anderson", 
    "Bedford",
    "Bloomington",
    "Columbus",
    "Connersville",
    "Corydon",
    "Crawfordsville",
    "East Chicago",
    "Elkhart",
    "Elwood",
    "Evansville",
    "Fort Wayne",
    "French Lick",
    "Gary",
    "Geneva",
    "Goshen",
    "Greenfield",
    "Hammond",
    "Hobart",
    "Huntington",
    "Indianapolis",
    "Jeffersonville",
    "Kokomo",
    "Lafayette",
    "Madison",
    "Marion",
    "Michigan City",
    "Mishawaka",
    "Muncie",
    "Nappanee",
    "Nashville",
    "New Albany",
    "New Castle",
    "New Harmony",
    "Peru",
    "Plymouth",
    "Richmond",
    "Santa Claus",
    "Shelbyville",
    "South Bend",
    "Terre Haute",
    "Valparaiso",
    "Vincennes",
    "Wabash",
    "West Lafayette"
  ],
  "Iowa": [
    "Amana Colonies",
    "Ames",
    "Boone",
    "Burlington",
    "Cedar Falls",
    "Cedar Rapids",
    "Charles City",
    "Cherokee",
    "Clinton",
    "Council Bluffs",
    "Davenport",
    "Des Moines",
    "Dubuque",
    "Estherville",
    "Fairfield",
    "Fort Dodge",
    "Grinnell",
    "Indianola",
    "Iowa City",
    "Keokuk",
    "Mason City",
    "Mount Pleasant",
    "Muscatine",
    "Newton",
    "Oskaloosa",
    "Ottumwa",
    "Sioux City",
    "Waterloo",
    "Webster City",
    "West Des Moines"
  ],
  "Kansas" : [
    "Abilene",
    "Arkansas City",
    "Atchison",
    "Chanute",
    "Coffeyville",
    "Council Grove",
    "Dodge City",
    "Emporia",
    "Fort Scott",
    "Garden City",
    "Great Bend",
    "Hays",
    "Hutchinson",
    "Independence",
    "Junction City",
    "Kansas City",
    "Lawrence",
    "Leavenworth",
    "Liberal",
    "Manhattan",
    "McPherson",
    "Medicine Lodge",
    "Newton",
    "Olathe",
    "Osawatomie",
    "Ottawa",
    "Overland Park",
    "Pittsburg",
    "Salina",
    "Shawnee",
    "Smith Center",
    "Topeka",
    "Wichita"
  ],
  "Kentucky" : [
    "Ashland",
    "Barbourville",
    "Bardstown",
    "Berea",
    "Boonesborough",
    "Bowling Green",
    "Campbellsville",
    "Covington",
    "Danville",
    "Elizabethtown",
    "Frankfort",
    "Harlan",
    "Harrodsburg",
    "Hazard",
    "Henderson",
    "Hodgenville",
    "Hopkinsville",
    "Lexington",
    "Louisville",
    "Mayfield",
    "Maysville",
    "Middlesboro",
    "Newport",
    "Owensboro",
    "Paducah",
    "Paris",
    "Richmond"
  ],
  "Louisiana" : [
    "Abbeville",
    "Alexandria",
    "Bastrop", 
    "Baton Rouge",
    "Bogalusa",
    "Bossier City",
    "Gretna",
    "Houma",
    "Lafayette",
    "Lake Charles",
    "Monroe",
    "Morgan City",
    "Natchitoches",
    "New Iberia",
    "New Orleans",
    "Opelousas",
    "Ruston",
    "Saint Martinville",
    "Shreveport",
    "Thibodaux"
  ], 
  "Maine" : [
    "Auburn",
    "Augusta",
    "Bangor",
    "Bar Harbor",
    "Bath",
    "Belfast",
    "Biddeford",
    "Boothbay Harbor",
    "Brunswick",
    "Calais",
    "Caribou",
    "Castine",
    "Eastport",
    "Ellsworth",
    "Farmington",
    "Fort Kent",
    "Gardiner",
    "Houlton",
    "Kennebunkport",
    "Kittery",
    "Lewiston",
    "Lubec",
    "Machias",
    "Orono",
    "Portland",
    "Presque Isle",
    "Rockland",
    "Rumford",
    "Saco",
    "Scarborough",
    "Waterville",
    "York"
  ],
  "Maryland":[
    "Aberdeen",
    "Annapolis",
    "Baltimore",
    "Bethesda-Chevy Chase",
    "Bowie",
    "Cambridge",
    "Catonsville",
    "College Park",
    "Columbia",
    "Cumberland",
    "Easton",
    "Elkton",
    "Emmitsburg",
    "Frederick",
    "Greenbelt",
    "Hagerstown",
    "Hyattsville",
    "Laurel",
    "Oakland",
    "Ocean City",
    "Rockville",
    "Saint Marys City",
    "Salisbury",
    "Silver Spring",
    "Takoma Park",
    "Towson",
    "Westminster"
  ],
  "Massachusetts":[
    "Abington",
    "Adams",
    "Amesbury",
    "Amherst",
    "Andover",
    "Arlington",
    "Athol",
    "Attleboro",
    "Barnstable",
    "Bedford",
    "Beverly",
    "Boston",
    "Bourne",
    "Braintree",
    "Brockton",
    "Brookline",
    "Cambridge",
    "Canton",
    "Charlestown",
    "Chelmsford",
    "Chelsea",
    "Chicopee",
    "Clinton",
    "Cohasset",
    "Concord",
    "Danvers",
    "Dartmouth",
    "Dedham",
    "Dennis",
    "Duxbury",
    "Eastham",
    "Edgartown",
    "Everett",
    "Fairhaven",
    "Fall River",
    "Falmouth",
    "Fitchburg",
    "Framingham",
    "Gloucester",
    "Great Barrington",
    "Greenfield",
    "Groton",
    "Harwich",
    "Haverhill",
    "Hingham",
    "Holyoke",
    "Hyannis",
    "Ipswich",
    "Lawrence",
    "Lenox",
    "Leominster",
    "Lexington",
    "Lowell",
    "Ludlow",
    "Lynn",
    "Malden",
    "Marblehead",
    "Marlborough",
    "Medford",
    "Milton",
    "Nahant",
    "Natick",
    "New Bedford",
    "Newburyport",
    "Newton",
    "North Adams",
    "Northampton",
    "Norton",
    "Norwood",
    "Peabody",
    "Pittsfield",
    "Plymouth",
    "Provincetown",
    "Quincy",
    "Randolph",
    "Revere",
    "Salem",
    "Sandwich",
    "Saugus",
    "Somerville",
    "South Hadley",
    "Springfield",
    "Stockbridge",
    "Stoughton",
    "Sturbridge",
    "Sudbury",
    "Taunton",
    "Tewksbury",
    "Truro",
    "Watertown",
    "Webster",
    "Wellesley",
    "Wellfleet",
    "West Bridgewater",
    "West Springfield",
    "Westfield",
    "Weymouth",
    "Whitman",
    "Williamstown",
    "Woburn",
    "Woods Hole",
    "Worcester"
  ],
  "Michigan":[
    "Adrian",
    "Alma",
    "Ann Arbor",
    "Battle Creek",
    "Bay City",
    "Benton Harbor",
    "Bloomfield Hills",
    "Cadillac",
    "Charlevoix",
    "Cheboygan",
    "Dearborn",
    "Detroit",
    "East Lansing",
    "Eastpointe",
    "Ecorse",
    "Escanaba",
    "Flint",
    "Grand Haven",
    "Grand Rapids",
    "Grayling",
    "Grosse Pointe",
    "Hancock",
    "Highland Park",
    "Holland",
    "Houghton",
    "Interlochen",
    "Iron Mountain",
    "Ironwood",
    "Ishpeming",
    "Jackson",
    "Kalamazoo",
    "Lansing",
    "Livonia",
    "Ludington",
    "Mackinaw City",
    "Manistee",
    "Marquette",
    "Menominee",
    "Midland",
    "Monroe",
    "Mount Clemens",
    "Mount Pleasant",
    "Muskegon",
    "Niles",
    "Petoskey",
    "Pontiac",
    "Port Huron",
    "Royal Oak",
    "Saginaw",
    "Saint Ignace",
    "Saint Joseph",
    "Sault Sainte Marie",
    "Traverse City",
    "Trenton",
    "Warren",
    "Wyandotte",
    "Ypsilanti"
  ],
  "Minnesota" : [
    "Albert Lea",
    "Alexandria",
    "Austin",
    "Bemidji",
    "Bloomington",
    "Brainerd",
    "Crookston",
    "Duluth",
    "Ely",
    "Eveleth",
    "Faribault",
    "Fergus Falls",
    "Hastings",
    "Hibbing",
    "International Falls",
    "Little Falls",
    "Mankato",
    "Minneapolis",
    "Moorhead",
    "New Ulm",
    "Northfield",
    "Owatonna",
    "Pipestone",
    "Red Wing",
    "Rochester",
    "Saint Cloud",
    "Saint Paul",
    "Sauk Centre",
    "South Saint Paul",
    "Stillwater",
    "Virginia",
    "Willmar",
    "Winona"
  ],
  "Mississippi" : [
    "Bay Saint Louis",
    "Biloxi",
    "Canton",
    "Clarksdale",
    "Columbia",
    "Columbus",
    "Corinth",
    "Greenville",
    "Greenwood",
    "Grenada",
    "Gulfport",
    "Hattiesburg",
    "Holly Springs",
    "Jackson",
    "Laurel",
    "Meridian",
    "Natchez",
    "Ocean Springs",
    "Oxford",
    "Pascagoula",
    "Pass Christian",
    "Philadelphia",
    "Port Gibson",
    "Starkville",
    "Tupelo",
    "Vicksburg",
    "West Point",
    "Yazoo City"
  ],
  "Missouri":[
    "Boonville",
    "Branson",
    "Cape Girardeau",
    "Carthage",
    "Chillicothe",
    "Clayton",
    "Columbia",
    "Excelsior Springs",
    "Ferguson",
    "Florissant",
    "Fulton",
    "Hannibal",
    "Independence",
    "Jefferson City",
    "Joplin",
    "Kansas City",
    "Kirksville",
    "Lamar",
    "Lebanon",
    "Lexington",
    "Maryville",
    "Mexico",
    "Monett",
    "Neosho",
    "New Madrid",
    "Rolla",
    "Saint Charles",
    "Saint Joseph",
    "Saint Louis",
    "Saint Genevieve",
    "Salem",
    "Sedalia",
    "Springfield",
    "Warrensburg",
    "West Plains"
  ],
  "Montana":[
    "Anaconda",
    "Billings",
    "Bozeman",
    "Butte",
    "Dillon",
    "Fort Benton",
    "Glendive",
    "Great Falls",
    "Havre",
    "Helena",
    "Kalispell",
    "Lewistown",
    "Livingston",
    "Miles City",
    "Missoula",
    "Virginia City"
  ],
  "Nebraska":[
    "Beatrice",
    "Bellevue",
    "Boys Town",
    "Chadron",
    "Columbus",
    "Fremont",
    "Grand Island",
    "Hastings",
    "Kearney",
    "Lincoln",
    "McCook",
    "Minden",
    "Nebraska City",
    "Norfolk",
    "North Platte",
    "Omaha",
    "Plattsmouth",
    "Red Cloud",
    "Sidney"
  ],
  "Nevada" : [
    "Boulder City",
    "Carson City",
    "Elko",
    "Ely",
    "Fallon",
    "Genoa",
    "Goldfield",
    "Henderson",
    "Las Vegas",
    "North Las Vegas",
    "Reno",
    "Sparks",
    "Virginia City",
    "Winnemucca"
  ],
  "New Hampshire": [
    "Berlin",
    "Claremont",
    "Concord",
    "Derry",
    "Dover",
    "Durham",
    "Exeter",
    "Franklin",
    "Hanover",
    "Hillsborough",
    "Keene",
    "Laconia",
    "Lebanon",
    "Manchester",
    "Nashua",
    "Peterborough",
    "Plymouth",
    "Portsmouth",
    "Rochester",
    "Salem",
    "Somersworth"
  ],
  "New Jersey" : [
    "Asbury Park",
    "Atlantic City",
    "Bayonne",
    "Bloomfield",
    "Bordentown",
    "Bound Brook",
    "Bridgeton",
    "Burlington",
    "Caldwell",
    "Camden",
    "Cape May",
    "Clifton",
    "Cranford",
    "East Orange",
    "Edison",
    "Elizabeth",
    "Englewood",
    "Fort Lee",
    "Glassboro",
    "Hackensack",
    "Haddonfield",
    "Hoboken",
    "Irvington",
    "Jersey City",
    "Lakehurst",
    "Lakewood",
    "Long Beach",
    "Long Branch",
    "Madison",
    "Menlo Park",
    "Millburn",
    "Millville",
    "Montclair",
    "Morristown",
    "Mount Holly",
    "New Brunswick",
    "New Milford",
    "Newark",
    "Ocean City",
    "Orange",
    "Parsippany-Troy Hills",
    "Passaic",
    "Paterson",
    "Perth Amboy",
    "Plainfield",
    "Princeton",
    "Ridgewood",
    "Roselle",
    "Rutherford",
    "Salem",
    "Somerville",
    "South Orange Village",
    "Totowa",
    "Trenton",
    "Union",
    "Union City",
    "Vineland",
    "Wayne",
    "Weehawken",
    "West New York",
    "West Orange",
    "Willingboro",
    "Woodbridge"
  ],
  "New Mexico": [
    "Acoma",
    "Alamogordo",
    "Albuquerque",
    "Artesia",
    "Belen",
    "Carlsbad",
    "Clovis",
    "Deming",
    "Farmington",
    "Gallup",
    "Grants",
    "Hobbs",
    "Las Cruces",
    "Las Vegas",
    "Los Alamos",
    "Lovington",
    "Portales",
    "Raton",
    "Roswell",
    "Sante Fe",
    "Shiprock",
    "Silver City",
    "Socorro",
    "Taos",
    "Truth or Consequences",
    "Tucumcari"
  ],
  "New York" : [
    "Albany",
    "Amsterdam",
    "Auburn",
    "Babylon",
    "Batavia",
    "Beacon",
    "Bedford",
    "Binghamton",
    "Bronx",
    "Brooklyn",
    "Buffalo",
    "Chautauqua",
    "Cheektowaga",
    "Clinton",
    "Cohoes",
    "Coney Island",
    "Cooperstown",
    "Corning",
    "Cortland",
    "Crown Point",
    "Dunkirk",
    "East Aurora",
    "East Hampton",
    "Eastchester",
    "Elmira",
    "Flushing",
    "Forest Hills",
    "Fredonia",
    "Garden City",
    "Geneva",
    "Glens Falls",
    "Gloversville",
    "Great Neck",
    "Hammondsport",
    "Harlem",
    "Hempstead",
    "Herkimer",
    "Hudson",
    "Huntington",
    "Hyde Park",
    "Ilion",
    "Ithaca",
    "Jamestown",
    "Johnstown",
    "Kingston",
    "Lackawanna",
    "Lake Placid",
    "Levittown",
    "Lockport",
    "Mamaroneck",
    "Manhattan",
    "Massena",
    "Middletown",
    "Mineola",
    "Mount Vernon",
    "New Paltz",
    "New Rochelle",
    "New Windsor",
    "New York City",
    "Newburgh",
    "Niagara Falls",
    "North Hempstead",
    "Nyack",
    "Ogdensburg",
    "Olean",
    "Oneida",
    "Oneonta",
    "Ossining",
    "Oswego",
    "Oyster Bay",
    "Palmyra",
    "Peekskill",
    "Plattsburgh",
    "Port Washington",
    "Potsdam",
    "Poughkeepsie",
    "Queens",
    "Rensselaer",
    "Rochester",
    "Rome",
    "Rotterdam",
    "Rye",
    "Sag Harbor",
    "Saranac Lake",
    "Saratoga Springs",
    "Scarsdale",
    "Schenectady",
    "Seneca Falls",
    "Southampton",
    "Staten Island",
    "Stony Brook",
    "Stony Point",
    "Syracuse",
    "Tarrytown",
    "Ticonderoga",
    "Tonawanda",
    "Troy",
    "Utica",
    "Watertown",
    "Watervliet",
    "Watkinds Glen",
    "West Seneca",
    "White Plains",
    "Woodstock",
    "Yonkers"
  ],
  "North Carolina" : [
    "Asheboro",
    "Asheville",
    "Bath",
    "Beaufort",
    "Boone",
    "Burlington",
    "Chapel Hill",
    "Charlotte",
    "Concord",
    "Durham",
    "Edenton",
    "Elizabeth City",
    "Fayetteville",
    "Gastonia",
    "Goldsboro",
    "Greensboro",
    "Greenville",
    "Halifax",
    "Henderson",
    "Hickory",
    "High Point",
    "Hillsborough",
    "Jacksonville",
    "Kinston",
    "Kitty Hawk",
    "Lumberton",
    "Morehead City",
    "Morganton",
    "Nags Head",
    "New Bern",
    "Pinehurst",
    "Raleigh",
    "Rocky Mount",
    "Salisbury",
    "Shelby",
    "Washington",
    "Wilmington",
    "Wilson",
    "Winston-Salem"
  ],
  "North Dakota" : [
    "Bismarck",
    "Devils Lake",
    "Dickinson",
    "Fargo",
    "Grand Forks",
    "Jamestown",
    "Mandan",
    "Minot",
    "Rugby",
    "Valley City",
    "Wahpeton",
    "Williston"
  ],
  "Ohio" : [
    "Akron",
    "Alliance",
    "Ashtabula",
    "Athens",
    "Barberton",
    "Bedford",
    "Bellefontaine",
    "Bowling Green",
    "Canton",
    "Chillicothe",
    "Cincinnati",
    "Cleveland",
    "Cleveland Heights",
    "Columbus",
    "Conneaut",
    "Cuyahoga Falls",
    "Dayton",
    "Defiance",
    "Delaware",
    "East Cleveland",
    "East Liverpool",
    "Elyria",
    "Euclid",
    "Findlay",
    "Gallipolis",
    "Greenville",
    "Hamilton",
    "Kent",
    "Kettering",
    "Lakewood",
    "Lancaster",
    "Lima",
    "Lorain",
    "Mansfield",
    "Marietta",
    "Marion",
    "Martins Ferry",
    "Massillon",
    "Mentor",
    "Middletown",
    "Milan",
    "Mount Vernon",
    "New Philadelphia",
    "Newark",
    "Niles",
    "North College Hill",
    "Norwalk",
    "Oberlin",
    "Painesville",
    "Parma",
    "Piqua",
    "Portsmouth",
    "Put-in-Bay",
    "Salem",
    "Sandusky",
    "Shaker Heights",
    "Springfield",
    "Steubenville",
    "Tiffin",
    "Toledo",
    "Urbana",
    "Warren",
    "Wooster",
    "Worthington",
    "Xenia",
    "Yellow Springs",
    "Youngstown",
    "Zanesville"
  ],
  "Oklahoma" : [
    "Ada",
    "Altus",
    "Alva",
    "Anadarko",
    "Ardmore",
    "Bartlesville",
    "Bethany",
    "Chickasha",
    "Claremore",
    "Clinton",
    "Cushing",
    "Duncan",
    "Durant",
    "Edmond",
    "El Reno",
    "Elk City",
    "Enid",
    "Eufaula",
    "Frederick",
    "Guthrie",
    "Guymon",
    "Hobart",
    "Holdenville",
    "Huge",
    "Lawton",
    "McAlester",
    "Miami",
    "Midwest City",
    "Moore",
    "Muskogee",
    "Norman",
    "Oklahoma City",
    "Okmulgee",
    "Pauls Valley",
    "Pawhuska",
    "Perry",
    "Ponca City",
    "Pryor",
    "Sallisaw",
    "Sand Springs",
    "Sapulpa",
    "Seminole",
    "Shawnee",
    "Stillwater",
    "Tahlequah",
    "The Village",
    "Tulsa",
    "Vinita",
    "Wewoka",
    "Woodward"
  ],
  "Oregon" : [
    "Albany",
    "Ashland",
    "Astoria",
    "Baker City",
    "Beaverton",
    "Bend",
    "Brookings",
    "Burns",
    "Coos Bay",
    "Corvallis",
    "Eugene",
    "Grant Pass",
    "Hillsboro",
    "Hood River",
    "Jacksonville",
    "John Day",
    "Klamath Falls",
    "La Grande",
    "Lake Oswego",
    "Lakeview",
    "McMinnville",
    "Medford",
    "Newberg",
    "Ontario",
    "Oregon City",
    "Pendleton",
    "Port Orford",
    "Portland",
    "Prineville",
    "Redmond",
    "Reedsport",
    "Roseburg",
    "Salem",
    "Seaside",
    "Springfield",
    "The Dalles",
    "Tillamook"
  ],
  "Pennsylvania" : [
    "Abington",
    "Aliquippa",
    "Allentown",
    "Altoona",
    "Ambridge",
    "Bedford",
    "Bethlehem",
    "Bloomsburg",
    "Bradford",
    "Bristol",
    "Carbondale",
    "Carlisle",
    "Chambersburg",
    "Chester",
    "Columbia",
    "Easter",
    "Erie",
    "Franklin",
    "Germantown",
    "Gettysburg",
    "Greensburg",
    "Hanover",
    "Harmony",
    "Harrisburg",
    "Hazleton",
    "Hershey",
    "Homestead",
    "Honesdale",
    "Indiana",
    "Jeannette",
    "Jim Thorpe",
    "Johnstown",
    "Lancaster",
    "Lebanon",
    "Levittown",
    "Lewistown",
    "Lock Haven",
    "Lower Southampton",
    "McKeesport",
    "Meadville",
    "Middletown",
    "Monroeville",
    "Nanticoke",
    "New Castle",
    "New Hope",
    "New Kensington",
    "Norristown",
    "Oil City",
    "Philadelphia",
    "Phoenixville",
    "Pittsburgh",
    "Pottstown",
    "Pottsville",
    "Reading",
    "Scranton",
    "Shamokin",
    "Sharon",
    "State College",
    "Stroudsburg",
    "Sunbury",
    "Swarthmore",
    "Tamaqua",
    "Titusville",
    "Uniontown",
    "Warren",
    "Washington",
    "West Chester",
    "Wilkes-Barre",
    "Williamsport",
    "York"
  ], 
  "Rhode Island" : [
    "Barrington",
    "Bristol",
    "Central Falls",
    "Cranston",
    "East Greenwich",
    "East Providence",
    "Kingston",
    "Middletown",
    "Narragansett",
    "Newport",
    "North Kingstown",
    "Pawtucket",
    "Portsmouth",
    "Providence",
    "South Kingstown",
    "Tiverton",
    "Warren",
    "Warwick",
    "Westerly",
    "Wickford",
    "Woonsocket"
  ],
  "South Carolina" : [
    "Abbeville",
    "Aiken",
    "Anderson",
    "Beaufort",
    "Camden",
    "Charleston",
    "Columbia",
    "Darlington",
    "Florence",
    "Gaffney",
    "Georgetown",
    "Greenville",
    "Greenwood",
    "Hartsville",
    "Lancaster",
    "Mount Pleasant",
    "Myrtle Beach",
    "Orangeburg",
    "Rock Hill",
    "Spartanburg",
    "Sumter",
    "Union"
  ], 
  "South Dakota" : [
    "Aberdeen",
    "Belle Fourche",
    "Brookings",
    "Canton",
    "Custer",
    "De Smet",
    "Deadwood",
    "Hot Springs",
    "Huron",
    "Lead",
    "Madison",
    "Milbank",
    "Mitchell",
    "Mobridge",
    "Pierre",
    "Rapid City",
    "Sioux Falls",
    "Spearfish",
    "Sturgis",
    "Vermillion",
    "Watertown",
    "Yankton"
  ],
  "Tennessee" : [
    "Alcoa",
    "Athens",
    "Chattanooga",
    "Clarksville",
    "Cleveland",
    "Columbia",
    "Cookeville",
    "Dayton",
    "Elizabethton",
    "Franklin",
    "Gallatin",
    "Gatlinburg",
    "Greeneville",
    "Jackson",
    "Johnson City",
    "Jonesborough",
    "Kingsport",
    "Knoxville",
    "Lebanon",
    "Maryville",
    "Memphis",
    "Morristown",
    "Murfreesboro",
    "Nashville",
    "Norris",
    "Oak Ridge",
    "Shelbyville",
    "Tullahoma",
  ],
  "Texas" : [
    "Abilene",
    "Alpine",
    "Amarillo",
    "Arlington",
    "Austin",
    "Baytown",
    "Beaumont",
    "Big Spring",
    "Borger",
    "Brownsville",
    "Bryan",
    "Canyon",
    "Cleburne",
    "College Station",
    "Corpus Christi",
    "Crystal City",
    "Dallas",
    "Del Rio",
    "Denison",
    "Denton",
    "Eagle Pass",
    "Edinburg",
    "El Paso",
    "Fort Worth",
    "Freeport",
    "Galveston",
    "Garland",
    "Goliad",
    "Greenville",
    "Harlingen",
    "Houston",
    "Huntsville",
    "Irving",
    "Johnson City",
    "Kilgore",
    "Killeen",
    "Kingsville",
    "Laredo",
    "Longview",
    "Lubbock",
    "Lufkin",
    "Marshall",
    "McAllen",
    "McKinney",
    "Mesquite",
    "Midland",
    "Mission",
    "Nacogdoches",
    "New Braunfels",
    "Odessa",
    "Orange",
    "Pampa",
    "Paris",
    "Pasadena",
    "Pecos",
    "Pharr",
    "Plainview",
    "Plano",
    "Port Arthur",
    "Port Lavaca",
    "Richardson",
    "San Angelo",
    "San Antonio",
    "San Felipe",
    "San Marcos",
    "Sherman", 
    "Sweetwater",
    "Temple",
    "Texarkana",
    "Texas City",
    "Tyler",
    "Uvalde",
    "Victoria",
    "Waco",
    "Weatherfood",
    "Wichita Falls",
    "Ysleta"
  ],
  "Utah" : [
    "Alta",
    "American Fork",
    "Bountiful",
    "Brigham City",
    "Cedar City",
    "Clearfield",
    "Delta",
    "Fillmore",
    "Green River",
    "Heber City",
    "Kanab",
    "Layton",
    "Lehi",
    "Logan",
    "Manti",
    "Moab",
    "Monticello",
    "Murray",
    "Nephi",
    "Ogden",
    "Orderville",
    "Orem",
    "Panguitch",
    "Park City",
    "Payson",
    "Price",
    "Provo",
    "Saint George",
    "Salt Lake City",
    "Spanish Fork",
    "Springville",
    "Tooele",
    "Vernal"
  ],
  "Vermont" : [
    "Barre",
    "Bellows Falls",
    "Bennington",
    "Brattleboro",
    "Burlington",
    "Essex",
    "Manchester",
    "Middlebury",
    "Montpelier",
    "Newport",
    "Plymouth",
    "Rutland",
    "Saint Albans",
    "Saint Johnsbury",
    "Sharon",
    "Winooski"
  ],
  "Virginia" : [
    "Abingdon",
    "Alexandria",
    "Bristol",
    "Charlottesville",
    "Chesapeake",
    "Danville",
    "Fairfax",
    "Falls Church",
    "Fredericksburg",
    "Hampton",
    "Hanover",
    "Hopewell",
    "Lexington",
    "Lynchburg",
    "Manassas",
    "Martinsville",
    "New Market",
    "Newport News",
    "Norfolk",
    "Petersburg",
    "Portsmouth",
    "Reston",
    "Richmond",
    "Roanoke",
    "Staunton",
    "Suffolk",
    "Virginia Beach",
    "Waynesboro",
    "Williamsburg",
    "Winchester"
  ],
  "Washington" : [
    "Aberdeen",
    "Anacortes", 
    "Auburn",
    "Bellevue",
    "Bellingham",
    "Bremerton",
    "Centralia",
    "Coulee Dam",
    "Coupeville",
    "Ellensburg",
    "Ephrata",
    "Everett",
    "Hoquiam",
    "Kelso",
    "Kennewick",
    "Longview",
    "Moses Lake",
    "Oak Harbor",
    "Olympia",
    "Pasco",
    "Point Roberts",
    "Port Angeles",
    "Pullman",
    "Puyallup",
    "Redmond",
    "Renton",
    "Richland",
    "Seattle",
    "Spokane",
    "Tacoma",
    "Vancouver",
    "Walla Walla",
    "Wenatchee",
    "Yakima"
  ],
  "West Virginia" : [
    "Bath",
    "Beckley",
    "Bluefield",
    "Buckhannon",
    "Charles Town",
    "Charleston",
    "Clarksburg",
    "Elkins",
    "Fairmont",
    "Grafton",
    "Harpers Ferry",
    "Hillsboro",
    "Hinton",
    "Huntington",
    "Keyser",
    "Lewisburg",
    "Logan",
    "Martinsburg",
    "Morgantown",
    "Moundsville",
    "New Martinsville",
    "Parkersburg",
    "Philippi",
    "Point Pleasant",
    "Princeton",
    "Romney",
    "Shepherdstown",
    "South Charleston",
    "Summersville",
    "Weirton",
    "Welch",
    "Wellsburg",
    "Weston",
    "Wheeling",
    "White Sulphur Springs",
    "Williamson"
  ],
  "Wisconsin" : [
    "Appleton",
    "Ashland",
    "Baraboo",
    "Belmont",
    "Beloit",
    "Eau Claire",
    "Fond du Lac",
    "Green Bay",
    "Hayward",
    "Janesville",
    "Kenosha",
    "La Crosse",
    "Lake Geneva",
    "Madison",
    "Manitowoc",
    "Marinette",
    "Menasha",
    "Milwaukee",
    "Neenah",
    "New Glarus",
    "Oconto",
    "Oshkosh",
    "Peshtigo",
    "Portage",
    "Prairie du Chien",
    "Racine",
    "Rhinelander",
    "Ripon",
    "Sheboygan",
    "Spring Green",
    "Stevens Point",
    "Sturgeon Bay",
    "Superior",
    "Waukesha",
    "Wausau",
    "Wauwatosa",
    "West Allis",
    "West Bend",
    "Wisconsin Dells"
  ],
  "Wyoming" : [
    "Buffalo",
    "Casper",
    "Cheyenne",
    "Cody",
    "Douglas",
    "Evanston",
    "Gillette",
    "Green River",
    "Jackson",
    "Lander",
    "Laramie",
    "Newcastle",
    "Powell",
    "Rawlins",
    "Riverton",
    "Rock Springs",
    "Sheridan",
    "Ten Sleep",
    "Thermopolis",
    "Torrington",
    "Worland"
  ]
}
// Variable for State code for each state
var listOfStateUS = [
  {"name":"Alabama","code":"AL"},
  {"name":"Alaska","code":"AK"},
  {"name":"Arizona","code":"AZ"},
  {"name":"Arkansas","code":"AR"},
  {"name":"California","code":"CA"},
  {"name":"Colorado","code":"CO"},
  {"name":"Connecticut","code":"CT"},
  {"name":"Delaware","code":"DE"},
  {"name":"Florida","code":"FL"},
  {"name":"Georgia","code":"GA"},
  {"name":"Hawaii","code":"HI"},
  {"name":"Idaho","code":"ID"},
  {"name":"Illinois","code":"IL"},
  {"name":"Indiana","code":"IN"},
  {"name":"Iowa","code":"IA"},
  {"name":"Kansas","code":"KS"},
  {"name":"Kentucky","code":"KY"},
  {"name":"Louisiana","code":"LA"},
  {"name":"Maine","code":"ME"},
  {"name":"Maryland","code":"MD"},
  {"name":"Massachusetts","code":"MA"},
  {"name":"Michigan","code":"MI"},
  {"name":"Minnesota","code":"MN"},
  {"name":"Mississippi","code":"MS"},
  {"name":"Missouri","code":"MO"},
  {"name":"Montana","code":"MT"},
  {"name":"Nebraska","code":"NE"},
  {"name":"Nevada","code":"NV"},
  {"name":"New Hampshire","code":"NH"},
  {"name":"New Jersey","code":"NJ"},
  {"name":"New Mexico","code":"NM"},
  {"name":"New York","code":"NY"},
  {"name":"North Carolina","code":"NC"},
  {"name":"North Dakota","code":"ND"},
  {"name":"Ohio","code":"OH"},
  {"name":"Oklahoma","code":"OK"},
  {"name":"Oregon","code":"OR"},
  {"name":"Pennsylvania","code":"PA"},
  {"name":"Rhode Island","code":"RI"},
  {"name":"South Carolina","code":"SC"},
  {"name":"South Dakota","code":"SD"},
  {"name":"Tennessee","code":"TN"},
  {"name":"Texas","code":"TX"},
  {"name":"Utah","code":"UT"},
  {"name":"Vermont","code":"VT"},
  {"name":"Virginia","code":"VA"},
  {"name":"Washington","code":"WA"},
  {"name":"West Virginia","code":"WV"},
  {"name":"Wisconsin","code":"WI"},
  {"name":"Wyoming","code":"WY"}
]
//////////////////////////////////// Variables ////////////////////////////////////
          //jquery var for Search cities
var citySearchFormEl = $('#citySearchForm')
var countryNameSelect = $('#countryNameInput');  
var stateNameSelect = $('#stateNameInput');
var cityNameInput = $('#cityNameInput');
var searchBtn = $('#button-search');
var cityHistContainer = $('#city-history')
var searchHistoryList = [];

          // jquery variables for today's weather
var todayCity = $('#today-city-name');
var todayTemp = $('#today-temp');
var todayWind = $('#today-wind');
var todayHumid = $('#today-humidity');
var todayUV = $('#today-UV-index');

          //forecast container variables
var forcastContainer = $('#forecast-container');

          // moment js variables
var todayDate = moment().format("MM-DD-YYYY");
          // openweather variables
var APIKey = "d729cb3acec026c9b365ba8ff6fc07c5"
var unit = "imperial"
var cityName = "";
var stateCode = "";
var stateIndex = "";
var countryCode = "";
var lat = "";
var lon = "";
var iconNo = "";
var geoURL = `https://api.openweathermap.org/geo/1.0/direct?q=${cityName},${stateCode},${countryCode}&appid=${APIKey}`
var geoStored = {
  city: cityName,
  state: stateCode,
  country: countryCode,
  lat: lat,
  lon: lon
}




//////////////////////////////////// Country List (Currently unavailable due to lack of data) ////////////////////////////////////

// var listOfCountries = [
//   {"name": "Afghanistan", "code": "AF"},
//   {"name": "Albania", "code": "AL"},
//   {"name": "Åland Islands", "code": "AX"},
//   {"name": "Algeria", "code": "DZ"},
//   {"name": "American Samoa", "code": "AS"},
//   {"name": "Andorra", "code": "AD"},
//   {"name": "Angola", "code": "AO"},
//   {"name": "Anguilla", "code": "AI"},
//   {"name": "Antarctica", "code": "AQ"},
//   {"name": "Antigua and Barbuda", "code": "AG"},
//   {"name": "Argentina", "code": "AR"},
//   {"name": "Armenia", "code": "AM"},
//   {"name": "Aruba", "code": "AW"},
//   {"name": "Australia", "code": "AU"},
//   {"name": "Austria", "code": "AT"},
//   {"name": "Azerbaijan", "code": "AZ"},
//   {"name": "Bahamas (the)", "code": "BS"},
//   {"name": "Bahrain", "code": "BH"},
//   {"name": "Bangladesh", "code": "BD"},
//   {"name": "Barbados", "code": "BB"},
//   {"name": "Belarus", "code": "BY"},
//   {"name": "Belgium", "code": "BE"},
//   {"name": "Belize", "code": "BZ"},
//   {"name": "Benin", "code": "BJ"},
//   {"name": "Bermuda", "code": "BM"},
//   {"name": "Bhutan", "code": "BT"},
//   {"name": "Bolivia (Plurinational State of)", "code": "BO"},
//   {"name": "Bonaire, Sint Eustatius and Saba", "code": "BQ"},
//   {"name": "Bosnia and Herzegovina", "code": "BA"},
//   {"name": "Botswana", "code": "BW"},
//   {"name": "Bouvet Island", "code": "BV"},
//   {"name": "Brazil", "code": "BR"},
//   {"name": "British Indian Ocean Territory (the)", "code": "IO"},
//   {"name": "Brunei Darussalam", "code": "BN"},
//   {"name": "Bulgaria", "code": "BG"},
//   {"name": "Burkina Faso", "code": "BF"},
//   {"name": "Burundi", "code": "BI"},
//   {"name": "Cabo Verde", "code": "CV"},
//   {"name": "Cambodia", "code": "KH"},
//   {"name": "Cameroon", "code": "CM"},
//   {"name": "Canada", "code": "CA"},
//   {"name": "Cayman Islands (the)", "code": "KY"},
//   {"name": "Central African Republic (the)", "code": "CF"},
//   {"name": "Chad", "code": "TD"},
//   {"name": "Chile", "code": "CL"},
//   {"name": "China", "code": "CN"},
//   {"name": "Christmas Island", "code": "CX"},
//   {"name": "Cocos (Keeling) Islands (the)", "code": "CC"},
//   {"name": "Colombia", "code": "CO"},
//   {"name": "Comoros (the)", "code": "KM"},
//   {"name": "Congo (the Democratic Republic of the)", "code": "CD"},
//   {"name": "Congo (the)", "code": "CG"},
//   {"name": "Cook Islands (the)", "code": "CK"},
//   {"name": "Costa Rica", "code": "CR"},
//   {"name": "Croatia", "code": "HR"},
//   {"name": "Cuba", "code": "CU"},
//   {"name": "Curaçao", "code": "CW"},
//   {"name": "Cyprus", "code": "CY"},
//   {"name": "Czechia", "code": "CZ"},
//   {"name": "Côte d'Ivoire", "code": "CI"},
//   {"name": "Denmark", "code": "DK"},
//   {"name": "Djibouti", "code": "DJ"},
//   {"name": "Dominica", "code": "DM"},
//   {"name": "Dominican Republic (the)", "code": "DO"},
//   {"name": "Ecuador", "code": "EC"},
//   {"name": "Egypt", "code": "EG"},
//   {"name": "El Salvador", "code": "SV"},
//   {"name": "Equatorial Guinea", "code": "GQ"},
//   {"name": "Eritrea", "code": "ER"},
//   {"name": "Estonia", "code": "EE"},
//   {"name": "Eswatini", "code": "SZ"},
//   {"name": "Ethiopia", "code": "ET"},
//   {"name": "Falkland Islands (the) [Malvinas]", "code": "FK"},
//   {"name": "Faroe Islands (the)", "code": "FO"},
//   {"name": "Fiji", "code": "FJ"},
//   {"name": "Finland", "code": "FI"},
//   {"name": "France", "code": "FR"},
//   {"name": "French Guiana", "code": "GF"},
//   {"name": "French Polynesia", "code": "PF"},
//   {"name": "French Southern Territories (the)", "code": "TF"},
//   {"name": "Gabon", "code": "GA"},
//   {"name": "Gambia (the)", "code": "GM"},
//   {"name": "Georgia", "code": "GE"},
//   {"name": "Germany", "code": "DE"},
//   {"name": "Ghana", "code": "GH"},
//   {"name": "Gibraltar", "code": "GI"},
//   {"name": "Greece", "code": "GR"},
//   {"name": "Greenland", "code": "GL"},
//   {"name": "Grenada", "code": "GD"},
//   {"name": "Guadeloupe", "code": "GP"},
//   {"name": "Guam", "code": "GU"},
//   {"name": "Guatemala", "code": "GT"},
//   {"name": "Guernsey", "code": "GG"},
//   {"name": "Guinea", "code": "GN"},
//   {"name": "Guinea-Bissau", "code": "GW"},
//   {"name": "Guyana", "code": "GY"},
//   {"name": "Haiti", "code": "HT"},
//   {"name": "Heard Island and McDonald Islands", "code": "HM"},
//   {"name": "Holy See (the)", "code": "VA"},
//   {"name": "Honduras", "code": "HN"},
//   {"name": "Hong Kong", "code": "HK"},
//   {"name": "Hungary", "code": "HU"},
//   {"name": "Iceland", "code": "IS"},
//   {"name": "India", "code": "IN"},
//   {"name": "Indonesia", "code": "ID"},
//   {"name": "Iran (Islamic Republic of)", "code": "IR"},
//   {"name": "Iraq", "code": "IQ"},
//   {"name": "Ireland", "code": "IE"},
//   {"name": "Isle of Man", "code": "IM"},
//   {"name": "Israel", "code": "IL"},
//   {"name": "Italy", "code": "IT"},
//   {"name": "Jamaica", "code": "JM"},
//   {"name": "Japan", "code": "JP"},
//   {"name": "Jersey", "code": "JE"},
//   {"name": "Jordan", "code": "JO"},
//   {"name": "Kazakhstan", "code": "KZ"},
//   {"name": "Kenya", "code": "KE"},
//   {"name": "Kiribati", "code": "KI"},
//   {"name": "Korea (North Korea, the Democratic People's Republic of)", "code": "KP"},
//   {"name": "Korea (South Korea, the Republic of)", "code": "KR"},
//   {"name": "Kosovo", "code": "XK"},
//   {"name": "Kuwait", "code": "KW"},
//   {"name": "Kyrgyzstan", "code": "KG"},
//   {"name": "Lao People's Democratic Republic (the)", "code": "LA"},
//   {"name": "Latvia", "code": "LV"},
//   {"name": "Lebanon", "code": "LB"},
//   {"name": "Lesotho", "code": "LS"},
//   {"name": "Liberia", "code": "LR"},
//   {"name": "Libya", "code": "LY"},
//   {"name": "Liechtenstein", "code": "LI"},
//   {"name": "Lithuania", "code": "LT"},
//   {"name": "Luxembourg", "code": "LU"},
//   {"name": "Macao", "code": "MO"},
//   {"name": "Madagascar", "code": "MG"},
//   {"name": "Malawi", "code": "MW"},
//   {"name": "Malaysia", "code": "MY"},
//   {"name": "Maldives", "code": "MV"},
//   {"name": "Mali", "code": "ML"},
//   {"name": "Malta", "code": "MT"},
//   {"name": "Marshall Islands (the)", "code": "MH"},
//   {"name": "Martinique", "code": "MQ"},
//   {"name": "Mauritania", "code": "MR"},
//   {"name": "Mauritius", "code": "MU"},
//   {"name": "Mayotte", "code": "YT"},
//   {"name": "Mexico", "code": "MX"},
//   {"name": "Micronesia (Federated States of)", "code": "FM"},
//   {"name": "Moldova (the Republic of)", "code": "MD"},
//   {"name": "Monaco", "code": "MC"},
//   {"name": "Mongolia", "code": "MN"},
//   {"name": "Montenegro", "code": "ME"},
//   {"name": "Montserrat", "code": "MS"},
//   {"name": "Morocco", "code": "MA"},
//   {"name": "Mozambique", "code": "MZ"},
//   {"name": "Myanmar", "code": "MM"},
//   {"name": "Namibia", "code": "NA"},
//   {"name": "Nauru", "code": "NR"},
//   {"name": "Nepal", "code": "NP"},
//   {"name": "Netherlands (the)", "code": "NL"},
//   {"name": "Netherlands Antilles", "code": "AN"},
//   {"name": "New Caledonia", "code": "NC"},
//   {"name": "New Zealand", "code": "NZ"},
//   {"name": "Nicaragua", "code": "NI"},
//   {"name": "Niger (the)", "code": "NE"},
//   {"name": "Nigeria", "code": "NG"},
//   {"name": "Niue", "code": "NU"},
//   {"name": "Norfolk Island", "code": "NF"},
//   {"name": "Northern Mariana Islands (the)", "code": "MP"},
//   {"name": "Norway", "code": "NO"},
//   {"name": "Oman", "code": "OM"},
//   {"name": "Pakistan", "code": "PK"},
//   {"name": "Palau", "code": "PW"},
//   {"name": "Palestine, State of", "code": "PS"},
//   {"name": "Panama", "code": "PA"},
//   {"name": "Papua New Guinea", "code": "PG"},
//   {"name": "Paraguay", "code": "PY"},
//   {"name": "Peru", "code": "PE"},
//   {"name": "Philippines (the)", "code": "PH"},
//   {"name": "Pitcairn", "code": "PN"},
//   {"name": "Poland", "code": "PL"},
//   {"name": "Portugal", "code": "PT"},
//   {"name": "Puerto Rico", "code": "PR"},
//   {"name": "Qatar", "code": "QA"},
//   {"name": "Republic of North Macedonia", "code": "MK"},
//   {"name": "Romania", "code": "RO"},
//   {"name": "Russian Federation (the)", "code": "RU"},
//   {"name": "Rwanda", "code": "RW"},
//   {"name": "Réunion", "code": "RE"},
//   {"name": "Saint Barthélemy", "code": "BL"},
//   {"name": "Saint Helena, Ascension and Tristan da Cunha", "code": "SH"},
//   {"name": "Saint Kitts and Nevis", "code": "KN"},
//   {"name": "Saint Lucia", "code": "LC"},
//   {"name": "Saint Martin (French part)", "code": "MF"},
//   {"name": "Saint Pierre and Miquelon", "code": "PM"},
//   {"name": "Saint Vincent and the Grenadines", "code": "VC"},
//   {"name": "Samoa", "code": "WS"},
//   {"name": "San Marino", "code": "SM"},
//   {"name": "Sao Tome and Principe", "code": "ST"},
//   {"name": "Saudi Arabia", "code": "SA"},
//   {"name": "Senegal", "code": "SN"},
//   {"name": "Serbia", "code": "RS"},
//   {"name": "Seychelles", "code": "SC"},
//   {"name": "Sierra Leone", "code": "SL"},
//   {"name": "Singapore", "code": "SG"},
//   {"name": "Sint Maarten (Dutch part)", "code": "SX"},
//   {"name": "Slovakia", "code": "SK"},
//   {"name": "Slovenia", "code": "SI"},
//   {"name": "Solomon Islands", "code": "SB"},
//   {"name": "Somalia", "code": "SO"},
//   {"name": "South Africa", "code": "ZA"},
//   {"name": "South Georgia and the South Sandwich Islands", "code": "GS"},
//   {"name": "South Sudan", "code": "SS"},
//   {"name": "Spain", "code": "ES"},
//   {"name": "Sri Lanka", "code": "LK"},
//   {"name": "Sudan (the)", "code": "SD"},
//   {"name": "Suriname", "code": "SR"},
//   {"name": "Svalbard and Jan Mayen", "code": "SJ"},
//   {"name": "Sweden", "code": "SE"},
//   {"name": "Switzerland", "code": "CH"},
//   {"name": "Syrian Arab Republic", "code": "SY"},
//   {"name": "Taiwan (Province of China)", "code": "TW"},
//   {"name": "Tajikistan", "code": "TJ"},
//   {"name": "Tanzania, United Republic of", "code": "TZ"},
//   {"name": "Thailand", "code": "TH"},
//   {"name": "Timor-Leste", "code": "TL"},
//   {"name": "Togo", "code": "TG"},
//   {"name": "Tokelau", "code": "TK"},
//   {"name": "Tonga", "code": "TO"},
//   {"name": "Trinidad and Tobago", "code": "TT"},
//   {"name": "Tunisia", "code": "TN"},
//   {"name": "Turkey", "code": "TR"},
//   {"name": "Turkmenistan", "code": "TM"},
//   {"name": "Turks and Caicos Islands (the)", "code": "TC"},
//   {"name": "Tuvalu", "code": "TV"},
//   {"name": "Uganda", "code": "UG"},
//   {"name": "Ukraine", "code": "UA"},
//   {"name": "United Arab Emirates (the)", "code": "AE"},
//   {"name": "United Kingdom of Great Britain and Northern Ireland (the)", "code": "GB"},
//   {"name": "United States Minor Outlying Islands (the)", "code": "UM"},
//   {"name": "United States of America (the)", "code": "US"},
//   {"name": "Uruguay", "code": "UY"},
//   {"name": "Uzbekistan", "code": "UZ"},
//   {"name": "Vanuatu", "code": "VU"},
//   {"name": "Venezuela (Bolivarian Republic of)", "code": "VE"},
//   {"name": "Viet Nam", "code": "VN"},
//   {"name": "Virgin Islands (British)", "code": "VG"},
//   {"name": "Virgin Islands (U.S.)", "code": "VI"},
//   {"name": "Wallis and Futuna", "code": "WF"},
//   {"name": "Western Sahara", "code": "EH"},
//   {"name": "Yemen", "code": "YE"},
//   {"name": "Zambia", "code": "ZM"},
//   {"name": "Zimbabwe", "code": "ZW"}
var listOfCountries = [
  {"name": "United States of America (the)", "code": "US"}
]
//Above is the temporary variable with only one element, (US)


//////////////////////////////////// functions for Countries ////////////////////////////////////
// append the <option> of countries in <select> for Country
function appendCountries() {
  for (var i = 0; i < listOfCountries.length; i++){
  let listOfOption = $('<option>');
  listOfOption.text(listOfCountries[i].name)
  listOfOption.attr('data-index', i);
  countryNameSelect.append(listOfOption);
  };
  // "238" is for when full list of country activated for this code
  // $('*[data-index="238"]').attr('selected', "")
  // currently its index is 0 because there is only one country in the list
  $('*[data-index="0"]').attr('selected', "")
}
// find the Country Code, by finding the element by "selected", for inputing into geological api
function findCountryCode() {
  var countryIndex = countryNameSelect.find(':selected')[0].dataset.index
  countryCode = listOfCountries[countryIndex].code
}


//////////////////////////////////// functions for States ////////////////////////////////////

// append the <option> of states in <select> for State
function appendState(stateListByCountry) {
  for (var i=0; i < stateListByCountry.length; i++) {
    let listOfOption = $('<option>');
    listOfOption.text(listOfStateUS[i].name);
    listOfOption.attr('data-index', i);
    stateNameSelect.append(listOfOption);
  }
}
//find the State Code, by finding the element by "Selected", for inputing into geological api
function findStateCode(stateListByCountry) {
  stateIndex = stateNameSelect.find(':selected')[0].dataset.index;
  stateCode = stateListByCountry[stateIndex].code
}


//////////////////////////////////// functions for Cities ////////////////////////////////////
// append the <option> of cities in <select> for Cities
function appendCities(citiesByCountry) {
  if (stateCode == "") {
    // write code about appending cities by country without stateCode (currently unavailable)
  } else {
    var objectState = Object.values(citiesByCountry)[stateIndex]
    for (var i = 0; i < objectState.length; i++) {
      let listOfOption = $('<option>');
      listOfOption.text(objectState[i])
      listOfOption.attr('data-index', i);
      cityNameInput.append(listOfOption);
    }
  }
}
// re-assign the variable cityName that was selected. 
function findCity(stateListByCountry) {
  var selectedCity = cityNameInput.find(':selected')[0].innerText
  cityName = selectedCity;
}

// this is initial function just for the search bar in the left side to make initial setting of US, CA, Los Angeles
function initSearch() {
  appendCountries();  
  findCountryCode();
  appendState(listOfStateUS);
  stateNameSelect.find('[data-index = 4]').attr('selected', "")
  findStateCode(listOfStateUS);
  appendCities(citiesOfUnitedStates);
  cityNameInput.find('[data-index = 53]').attr('selected', "");
  findCity(citiesOfUnitedStates);
  geoURL = `https://api.openweathermap.org/geo/1.0/direct?q=${cityName},${stateCode},${countryCode}&appid=${APIKey}`
}



// this is the function to get geological location of data lat and lon, and store it into localStorage temporary to use in openWeather API
function getCoordinate() {
  fetch(geoURL)
    .then(function (response) {
      return response.json();
    })
    .then(function (data) {
      lat = data[0].lat
      console.log(lat)
      lon = data[0].lon
      console.log(lon)
      geoStored = {
        city: cityName,
        state: stateCode,
        country: countryCode,
        lat: lat,
        lon: lon
      };
      localStorage.setItem('geoData', JSON.stringify(geoStored));
    })
}
// this is the function to read lat and lon from localStorage data to use in openWeather API by reassigning the variable "queryURL"
function readLocalStorage () {
  var geoDataLog = JSON.parse(localStorage.getItem('geoData'));
  lat = geoDataLog.lat;
  lon = geoDataLog.lon;
  var queryURL = "https://api.openweathermap.org/data/3.0/onecall?lat=" + lat + "&lon=" + lon + "&appid=" + APIKey;
}

//this is the initial function to run openweather API with initial search setting, which is US, CA, Los angeles
function init() {
  initSearchHistory();
  getCoordinate();
  setTimeout(function(){readLocalStorage()}, 1000);
  setTimeout(function(){getApi()}, 1000);
}

// Get api from openweather, and append to the page
function getApi() {
  queryURL = "https://api.openweathermap.org/data/3.0/onecall?lat=" + lat + "&lon=" + lon + "&exclulde=minutely,hourly,alerts&units=" + unit +"&appid=" + APIKey;
  fetch(queryURL)
    .then(function (response) {
      return response.json();
    })
    .then(function (data) {
      appendTodayData(data);
      appendForecastData(data);
    })
}

// function for appending today's weather data, it has custom images and changes color depends on UVI index
function appendTodayData(data) {
  todayCity.text(`${cityName} (${todayDate})`);
  todayTemp.text(`Temp: ${data.current.temp}˚F`);
  todayWind.text(`Wind: ${data.current.wind_speed} mph`);
  todayHumid.text(`Humidity: ${data.current.humidity}%`);
  
  var todayIcon = $('#today-icon');
  iconNo = data.current.weather[0].icon;
  let iconURL = `./assets/images/${iconNo}.png`
  todayIcon.attr('src', iconURL);


  var testingVar = data.current.uvi;
  var uvStatus = "";
  if (testingVar < 3) {
    todayUV.css('color', 'green')
    uvStatus = "Low"
  } else if (testingVar < 6) {
    todayUV.css('color', 'yellow')
    uvStatus = "Moderate"
    todayUV.css('background-color', 'grey');
  } else if (testingVar < 8) {
    todayUV.css('color', 'orange')
    uvStatus = "HIGH"
  } else {
    todayUV.css('color', 'red')
    uvStatus = "VERY HIGH"
  };
  todayUV.text(`UV Index: ${data.current.uvi} (${uvStatus})`); 
}
//function for appending forecast weather data, it has custom icon for weather.
function appendForecastData (data) {
  var forecastContainer = $('#forecast-container');
  forecastContainer.empty();
  for (var i = 1; i < 6; i++) {
    
    var forecastCol = $('<div>');
    var forecastDates = $('<h4>');
    var forecastIcons = $('<div>');
    var forecastTemps = $('<h5>');
    var forecastWinds = $('<h5>');
    var forecastHumidity = $('<h5>');
    var forecastIcon = $('<img>');

    forecastCol.addClass('col');
    forecastIcons.addClass('icon-forecast');

    forecastDates.text(`${moment(data.daily[i].dt, 'X').format('MM-DD-YYYY')}`);
    forecastTemps.text(`Temp: ${data.daily[i].temp.day}˚F`);
    forecastWinds.text(`Wind: ${data.daily[i].wind_speed} mph`);
    forecastHumidity.text(`Humidity: ${data.daily[i].humidity}%`);

    iconNo = data.daily[i].weather[0].icon;
    let iconURL = `./assets/images/mini-${iconNo}.png`
    // let iconURL = `./assets/images/${iconNo}.png`
    forecastIcon.attr('src', iconURL);
    forecastIcons.append(forecastIcon);
    
    forecastCol.append(forecastDates);
    forecastCol.append(forecastIcons);
    forecastCol.append(forecastTemps);
    forecastCol.append(forecastWinds);
    forecastCol.append(forecastHumidity);

    forecastContainer.append(forecastCol);
  }
}
//function for when user clicked the search button, to search that city's weather and append it into page.
function searchCity(event) {
  event.preventDefault();
  findCountryCode();
  findStateCode(listOfStateUS)
  var searchedCity = cityNameInput.val();
  cityName = searchedCity;
  searchHistoryAppend(cityName)
  geoURL = `https://api.openweathermap.org/geo/1.0/direct?q=${cityName},${stateCode},${countryCode}&appid=${APIKey}`
  getCoordinate();
  setTimeout(function(){readLocalStorage()}, 1000);
  setTimeout(function(){getApi()}, 1000);
  
}
function searchCity2(event) {
  event.preventDefault();
  findCountryCode();
  findStateCode(listOfStateUS);
  cityName = $(this).text();
  searchHistoryAppend(cityName);
  geoURL = `https://api.openweathermap.org/geo/1.0/direct?q=${cityName},${stateCode},${countryCode}&appid=${APIKey}`
  // getCoordinate()
  setTimeout(function(){getCoordinate()}, 1000);
  setTimeout(function(){readLocalStorage()}, 1400);
  setTimeout(function(){getApi()}, 1500);  
}
// initial function for bringing local storage data to append search history buttons into the page
function initSearchHistory() {
  let tempHistoryData = JSON.parse(localStorage.getItem('searchHistory'));
  if (tempHistoryData == null) {
    return;
  }
  searchHistoryList = tempHistoryData;
  searchHistoryList.reverse();
  for (var i = 0; i < searchHistoryList.length; i++) {
    var historyBtn = $('<button>');
    historyBtn.addClass('historyBtn')
    historyBtn.text(searchHistoryList[i]);
    historyBtn.attr('data-index', i);
    cityHistContainer.append(historyBtn);
  }
}

// function for appending the search history button into the page, in various situation
function searchHistoryAppend(nameOfCity) {
  let tempHistoryData = JSON.parse(localStorage.getItem('searchHistory'))
  // this is the situation of when we get localStorage data as null because it is empty
  if (tempHistoryData == null) {
    searchHistoryList.push(nameOfCity);
  localStorage.setItem('searchHistory', JSON.stringify(searchHistoryList))  
  // Below is the situation of when the selected city is already exist in search history, to replace into top area
  } else if (jQuery.inArray(nameOfCity, tempHistoryData) >= 0) {
    let indexRepetition = jQuery.inArray(nameOfCity, tempHistoryData);
    searchHistoryList = tempHistoryData;
    searchHistoryList.splice(indexRepetition, 1);
    searchHistoryList.push(nameOfCity);
    localStorage.setItem('searchHistory', JSON.stringify(searchHistoryList));
    // Below is the situaion of when search history button is max out (which is 10); 
    // it deletes the latest one, and push the one that was searched
  }
    else if (tempHistoryData.length > 9) {
    searchHistoryList = tempHistoryData;
    searchHistoryList.shift();
    searchHistoryList.push(nameOfCity);
    localStorage.setItem('searchHistory', JSON.stringify(searchHistoryList));
    // Other than above situations, this is regular situation of adding new history into array
  } else {
  searchHistoryList = tempHistoryData;
  searchHistoryList.push(nameOfCity);
  localStorage.setItem('searchHistory', JSON.stringify(searchHistoryList))
  }
  // After dealing with the specific situation, it empties the button because it would not append data with the data already exist.
  cityHistContainer.empty();
  // reverse the array, so that latest data will be at the bottom. 
  searchHistoryList.reverse();
  // iterate the function to append the search history data according to reversed array.
  for (var i = 0; i < searchHistoryList.length; i++) {
    var historyBtn = $('<button>');
    historyBtn.addClass('historyBtn')
    historyBtn.text(searchHistoryList[i]);
    historyBtn.attr('data-index', i);
    cityHistContainer.append(historyBtn);
  }
}
// this is the jquery change function, in order to append city list according to the state that user selected. 
stateNameSelect.change(function() {
  cityNameInput.empty();
  stateIndex = stateNameSelect.find(':selected')[0].dataset.index;
  appendCities(citiesOfUnitedStates);
})

//running the initial functions here
initSearch();
init();

//this is the search button submit function, to search the city
citySearchFormEl.on('submit', searchCity);
//this is the click function of jquery in order to search the cities that were in search history button
$('#city-history').on('click', '.historyBtn', function(event) {
  searchCity2();
})